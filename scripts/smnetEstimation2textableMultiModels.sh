#!/bin/sh
#
# File:    smnetEstimation2textableMultiModels.sh
# Author:  Alex Stivala
# Created: Februrary 2017
#
# This version updated Jul 2020 to add \heavy for significant estimates
#
# Read output of computeSMnetCovariance.R with the estimate,
# estimated std. error and t-ratio computed from SMNet results
# and build LaTeX table for multiple different models
# 
# Usage: build_smnet_estimation_results_tab.sh estimationoutputfile_model1 estimationoutputfile_model2 ...
#
# E.g.:
#   smnetEstimation2texttableMultiModels  estimation.out model2/estimation.out
#
# Output is to stdout
#
# Uses various GNU utils options on echo, etc.

zSigma=2 # multiplier of estimated standard error for nominal 95% C.I.
tratioThreshold=0.3 # t-ratio must be <= this for significance

if [ $# -lt 1 ]; then
    echo "usage: $0 estimation1.out estimation2.out ..." >&2
    exit 1
fi

num_models=`expr $#`

smnet_tmpfile=`mktemp`

echo "% Generated by: $0 $*"
echo "% At: " `date`
echo "% On: " `uname -a`

echo -n '\begin{tabular}{l'
i=1
while [ $i -le $num_models ]
do
  echo -n r
  i=`expr $i + 1`
done
echo '}'
echo '\hline'  
echo -n 'Effect '
i=1
while [ $i -le $num_models ]
do
  echo -n " & Model $i"
  i=`expr $i + 1`
done
echo '\\'
echo '\hline'  

model=1
for estimationresults in $*
do
  cat ${estimationresults} | grep -v AcceptanceRate | sed 's/K-star/K-Star/;s/K-Triangle/AKT-T/;s/AltTwoPath/A2P-T/;s/Rb_binaryAttribute/Rb_Attribute1/;s/R_binaryAttribute/R_Attribute1/' | sed 's/_acid/.acid/g;s/_specific/.specific/g;s/_enzyme/.enzyme/g;s/_stimulus/.stimulus/g;s/_factor/.factor/g;s/_biotic/.biotic/g;s/_domain/.domain/g;s/KinasePhosphorylatedClass/Kinase.Phosphorylated/g' | tr ' ' '\t' | sed "s/^/${model}\t/" >> ${smnet_tmpfile}
  model=`expr $model + 1`
done


effectlist=`cat ${smnet_tmpfile} |  awk '{print $2}' | sort | uniq`

for effect in ${effectlist}
do
  model=1
  echo -n "${effect} "
  while [ $model -le $num_models ]; 
  do
    smnet_point=`grep -w ${effect} ${smnet_tmpfile} | awk -vmodel=$model '$1 == model {print $3}'`
    smnet_stderr=`grep -w ${effect} ${smnet_tmpfile} | awk -vmodel=$model '$1 == model {print $4}'`
    smnet_tratio=`grep -w ${effect} ${smnet_tmpfile} | awk -vmodel=$model '$1 == model {print $5}'`    
    if [ "${smnet_point}" == "" ];  then
      echo -n " & ---"
    else
      # bc cannot handle scientific notation so use sed to convert it 
      smnet_lower=`echo "${smnet_point} - ${zSigma} * ${smnet_stderr}" | sed -e 's/[eE]+*/*10^/' | bc`
      smnet_upper=`echo "${smnet_point} + ${zSigma} * ${smnet_stderr}" | sed -e 's/[eE]+*/*10^/' | bc`
      abs_estimate=`echo "if (${smnet_point} < 0) -(${smnet_point}) else ${smnet_point}" | bc -l`
      abs_tratio=`echo "if (${smnet_tratio} < 0) -(${smnet_tratio}) else ${smnet_tratio}" | bc -l`      
      signif=`echo "${abs_tratio} <= ${tratioThreshold} && ${abs_estimate} > ${zSigma} * ${smnet_stderr}" | bc -l`
      # put statistically significant results in normal text, others
      # in "\heavy" which must be defined as e.g.
      # \newcommand{\heavy}[1]{\mathbf{#1}} % $\heavy used in tables
      if [ ${signif} -eq 0 ]; then
          printf " & \${\\underset{(%.3f, %.3f)}{%.3f}}\$" ${smnet_lower} ${smnet_upper} ${smnet_point}
      else
          printf " & \$\\heavy{\\underset{(%.3f, %.3f)}{%.3f}}\$" ${smnet_lower} ${smnet_upper} ${smnet_point}          
      fi
    fi
    model=`expr $model + 1`
  done
  echo '\\'
done

echo '\hline'  
echo '\end{tabular}'

rm ${smnet_tmpfile}
