#!/bin/sh
#
# File:    lologEstimation2textable.sh
# Author:  Alex Stivala
# Created: November 2023
#
# Read last estimation result from a latent order logistic (lolog)
# as produced by the summary() method on a lolog model in the
# lolog R package (https://cran.r-project.org/web/packages/lolog/index.html)
# and convert to LaTeX table for multipel different models
#
# Usage: lologEstimation2textable.sh   estimation_output_file_1.txt estimation_output_file_2.txt ...
#
# E.g.:
#   lologEstimation2textable.sh.sh  yeast_transcription_lolog_model1.txt yeast_transcription_lolog_model2.txt
#
# Output is to stdout
#
# Uses various GNU utils options on echo, etc.
#
# This version uses dcolumn package to format values, must
# \usepackage{dcolumn} in document.
#
#
# Parses output that looks like this:
#                  observed_statistics      theta         se pvalue
# edges                      1079.0000 -4.1066677 0.07767241      0
# twoPath                     386.0000 -0.7062469 0.06555177      0
# triangles                    74.0000  2.6632668 0.16593393      0
# in-gwdegree.0.2             644.1676  1.0385543 0.10476393      0
# out-gwdegree.0.2            152.3870 -3.9870033 0.11783041      0
#

if [ $# -lt 1 ]; then
    echo "usage: $0 estimation_file.txt" >&2
    exit 1
fi

num_models=`expr $#`


lolog_tmpfile=`mktemp`

echo "% Generated by: $0 $*"
echo "% At: " `date`
echo "% On: " `uname -a`
echo "\\begin{tabular}{l*{${num_models}}{D{)}{)}{14)3}}}"
echo '\hline'  
echo -n 'Effect '
i=1
while [ $i -le $num_models ]
do
    #don't put braces around text in dcolumn, only for siunitx: echo -n " & {Model ${i}}"
    echo -n " & \multicolumn{1}{c}{Model ${i}}" #use multicolumn instead for dcolumn
  i=`expr $i + 1`
done
echo '\\'
echo '\hline'  

model=1
for estimationresults in $*
do
    tail -n+2  ${estimationresults} | awk '{print $1,$3,$4,$5}' | sed "s/^/${model}\t/"  >>  ${lolog_tmpfile}

  model=`expr $model + 1`
done


effectlist=`cat ${lolog_tmpfile} |  awk '{print $2}' | sort | uniq`

for effect in ${effectlist}
do
  model=1
  echo -n "${effect} "

  while [ $model -le $num_models ]; 
  do
      lolog_point=`fgrep  "${effect} " ${lolog_tmpfile} | awk -vmodel=$model '$1 == model {print $3}'`
      if [ "${lolog_point}" == "" ];  then
          #does not work with dcolumn, turns into vertical bar (?!?!):echo -n " & \\textemdash"
          echo -n " &  " # just use empty space instead for dcolumn
      else
          lolog_stderr=`fgrep  "${effect} " ${lolog_tmpfile} | awk -vmodel=$model '$1 == model {print $4}'`
          lolog_pvalue=`fgrep  "${effect} " ${lolog_tmpfile} | awk -vmodel=$model '$1 == model {print $5}'`
          lolog_signif=`echo ${lolog_pvalue} | awk '{print( sprintf("%.4f", $1) < 0.001 ? "***" : (sprintf("%.4f", $1) < 0.01 ? "**" : (sprintf("%.4f", $1) < 0.05 ? "*" : "")) )}'`
          printf " & %.4f \\; (%.4f) ^{%s}" ${lolog_point} ${lolog_stderr} "${lolog_signif}"
      fi
      model=`expr $model + 1`
  done
  echo '\\'
done
  
echo '\hline'  
echo '\end{tabular}'
# not adding \floatfoot so have same number of tail rows as
# lologEstimation2textable.sh, so that reorderLologTextable.sh works on both
#echo '\floatfoot{*** $p < 0.001$; ** $p < 0.01$; * $p < 0.05$.}'
rm ${lolog_tmpfile}
